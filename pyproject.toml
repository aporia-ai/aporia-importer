[tool.poetry]
name = "aporia-importer"
version = "v1.0.31"
description = "Import data from cloud storage to Aporia"
authors = []
readme = "README.md"
repository = "https://github.com/aporia-ai/aporia-importer"

[tool.poetry.dependencies]
python = "^3.8"
dask = { version = "^2022.2.1", extras = ["complete"] }
pyarrow = "^9.0.0"
PyYAML = "^6.0"
s3fs = {version = "^2022.8.2", optional = true}
dask-kubernetes = {version = "^2022.7.0", optional = true}
aporia = {version = "^2.9.0", extras = ["training", "pandas"]}

[tool.poetry.dev-dependencies]
pytest = "~7.1"
pytest-asyncio = "~0.18"
isort = "~5.10"
black = "~22.6"
mypy = "~0.961"
flake8 = "~4.0"
flake8-import-order = "~0.18"
flake8-bugbear = "~22.7"
flake8-bandit = "~3.0"
flake8-annotations = "~2.9"
flake8-docstrings = "~1.6"
darglint = "~1.8"

[tool.poetry.scripts]
aporia-importer = 'aporia_importer.main:main'

[tool.poetry.extras]
s3 = ["s3fs"]
kubernetes = ["dask-kubernetes"]
all = ["s3fs", "dask-kubernetes"]

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
force_sort_within_sections = true
lexicographical = true
order_by_type = false
group_by_package = true
no_lines_before = ['LOCALFOLDER']
line_length = 100

[tool.mypy]
show_error_codes = true

[[tool.mypy.overrides]]
module = ["nox.*","pytest","pytest_mock","_pytest.*","dask","dask.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
